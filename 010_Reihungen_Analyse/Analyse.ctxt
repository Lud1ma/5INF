#BlueJ class context
comment0.target=Analyse
comment0.text=\n\ Die\ Klasse\ Analyse\ dient\ der\ Analyse\ einer\ Reihung\ von\ Messwerten.\n\ Sie\ kann\ zum\ Beispiel\ zur\ Analyse\ der\ Ergebnisse\ einer\ t\u00E4glichen\ Temperaturmessung\ \n\ \u00FCber\ einen\ Monat\ hinweg\ eingesetzt\ werden.\n\ \n\ @author\ \ Sebastian\ Funke;\ L\u00FCther\n\ @version\ 2020-10-09;\ 2020-10-19\n
comment1.params=messwerte
comment1.target=Analyse(double[])
comment10.params=reihe\ laenge
comment10.target=double\ gibMaximumRekursiv(double[],\ int)
comment10.text=\n\ Rekursive\ Implementation,\ um\ das\ Maximum\ zu\ ermitteln\n\ \n\ Zum\ Vergleich\ zweier\ double-Werte\ wird\ die\ Bibliotheksfunktion\ max()\ aus\ der\ Math-Bibliothek\ verwendet.\n
comment11.params=
comment11.target=double\ gibMaximumRekursiv()
comment11.text=\n\ Die\ Methode\ gibMaximumRekursiv()\ gibt\ das\ Maximum\ der\ Messwerte\ zur\u00FCck\ \n\ und\ verwendet\ dabei\ eine\ rekursive\ Hilfsmethode\ mit\ gleichem\ Namen\ aber\ verschiedener\ Parameterliste.\n\ Das\ ist\ ein\ Beispiel\ f\u00FCr\ Polymorphie.\n
comment12.params=reihe\ laenge
comment12.target=double\ gibMinimumRekursiv(double[],\ int)
comment12.text=\n\ Rekursive\ Implementation,\ um\ das\ Minimum\ zu\ ermitteln\n\ \n\ Zum\ Vergleich\ zweier\ double-Werte\ wird\ die\ Bibliotheksfunktion\ min()\ aus\ der\ Math-Bibliothek\ verwendet.\n
comment13.params=
comment13.target=double\ gibMinimumRekursiv()
comment13.text=\n\ Die\ Methode\ gibMinimumRekursiv()\ gibt\ das\ Minimum\ der\ Messwerte\ zur\u00FCck\ \n\ und\ verwendet\ dabei\ eine\ rekursive\ Hilfsmethode\ mit\ gleichem\ Namen\ aber\ verschiedener\ Parameterliste.\n\ Das\ ist\ ein\ Beispiel\ f\u00FCr\ Polymorphie.\n
comment2.params=index
comment2.target=double\ gibWert(int)
comment2.text=\n\ Die\ Methode\ gibMesswert(int)\ gibt\ den\ Wert\ aus\ messwerte\ an\ der\ Stelle\ i\ zur\u00FCck.\n\ \n\ @param\ \ keiner\ \ \ es\ wird\ kein\ Parameter\ ben\u00F6tigt\n\ @return\ double\ \ \ Der\ Wert\ an\ der\ Stelle\ i\ wird\ zur\u00FCckgegeben.\n
comment3.params=
comment3.target=double\ gibSumme()
comment3.text=\n\ Die\ Methode\ gibSumme()\ gibt\ die\ Summe\ der\ Reihung\ messwerte\ zur\u00FCck.\n\ \n\ @param\ \ keiner\ \ \ es\ wird\ kein\ Parameter\ ben\u00F6tigt\n\ @return\ double\ \ \ Der\ Durchschnitt\ der\ Messwerte\ wird\ zur\u00FCckgegeben.\n
comment4.params=
comment4.target=double\ gibDurchschnitt()
comment4.text=\n\ Die\ Methode\ gibDurchschnitt()\ gibt\ den\ Durchschnitt\ der\ Reihung\ messwerte\ zur\u00FCck.\n\ \n\ @param\ \ keiner\ \ \ es\ wird\ kein\ Parameter\ ben\u00F6tigt\n\ @return\ double\ \ \ Der\ Durchschnitt\ der\ Messwerte\ wird\ zur\u00FCckgegeben.\n
comment5.params=
comment5.target=double\ gibMaximum()
comment5.text=\n\ Die\ Methode\ gibMaximum()\ gibt\ das\ Maximum\ der\ Reihung\ messwerte\ zur\u00FCck.\n\ \n\ @param\ \ keiner\ \ \ es\ wird\ kein\ Parameter\ ben\u00F6tigt\n\ @return\ double\ \ \ Das\ Maximum\ der\ Messwerte\ wird\ zur\u00FCckgegeben.\n
comment6.params=
comment6.target=double\ gibMinimum()
comment6.text=\n\ Die\ Methode\ gibMinimum()\ gibt\ das\ Minimum\ der\ Reihung\ messwerte\ zur\u00FCck.\n\ \n\ @param\ \ keiner\ \ \ es\ wird\ kein\ Parameter\ ben\u00F6tigt\n\ @return\ double\ \ \ Das\ Minimum\ der\ Messwerte\ wird\ zur\u00FCckgegeben.\n
comment7.params=wert
comment7.target=double\ gibIndex(double)
comment7.text=\n\ Die\ Methode\ gibIndex(double)\ soll\ den\ Index\ des\ ersten\ Vorkommens\ eines\ Elements\ \n\ aus\ der\ Reihung\ messwerte\ zur\u00FCckgeben.\ \n\ Existiert\ das\ Element\ nicht,\ so\ soll\ -1\ zur\u00FCckgegeben\ werden.\n\ \n\ @param\ \ keiner\ \ \ es\ wird\ kein\ Parameter\ ben\u00F6tigt\n\ @return\ double\ \ \ Der\ Index\ des\ gesuchten\ Werts\ wird\ zur\u00FCckgegeben.\n
comment8.params=reihe\ laenge
comment8.target=double\ gibSummeRekursiv(double[],\ int)
comment8.text=\n\ Die\ Methode\ gibSummeRekursiv(double[],\ int)\ berechnet\ die\ Summe\ der\ Reihung\ rekursiv\ und\ gibt\ diese\ zur\u00FCck.\n\ \n\ @param\ \ double\ int\n\ @return\ double\ \ \ Die\ Summe\ der\ Messwerte\ wird\ zur\u00FCckgegeben.\n
comment9.params=
comment9.target=double\ gibSummeRekursiv()
comment9.text=\n\ Die\ Methode\ gibSummeRekursiv()\ gibt\ die\ Summe\ der\ Reihung\ messwerte\ zur\u00FCck\ \n\ und\ verwendet\ dabei\ eine\ rekursive\ Hilfsmethode\ \n\ mit\ gleichem\ Namen\ aber\ verschiedener\ Parameterliste.\n\ Das\ ist\ ein\ Beispiel\ f\u00FCr\ Polymorphie.\n\ \n\ @param\ \ keiner\ \ \ es\ wird\ kein\ Parameter\ ben\u00F6tigt\n\ @return\ double\ \ \ Die\ Summe\ der\ Messwerte\ wird\ zur\u00FCckgegeben.\n
numComments=14
