#BlueJ class context
comment0.target=AnalyseTest
comment0.text=\n\ Die\ Test-Klasse\ AnalyseTest\ testet\ die\ korrekte\ Implementierung\ der\ verschiedenen\ Analyse-Methoden.\n\n\ @author\ \ Sebastian\ Funke\n\ @version\ 2020-10-09\n
comment1.params=
comment1.target=AnalyseTest()
comment1.text=\n\ Konstruktor\ fuer\ die\ Test-Klasse\ AnalyseTest\n
comment10.params=
comment10.target=void\ gibWertTest()
comment11.params=
comment11.target=void\ gibSummeTest()
comment12.params=
comment12.target=void\ gibDurchschnittTest()
comment13.params=
comment13.target=void\ gibIndexTest()
comment14.params=
comment14.target=void\ gibMaximumTest()
comment15.params=
comment15.target=void\ gibMinimumTest()
comment2.params=
comment2.target=void\ erzeugeTestmessungen()
comment3.params=
comment3.target=void\ setUp()
comment3.text=\n\ \ Setzt\ das\ Testger\u00FCst\ fuer\ den\ Test.\n\n\ Wird\ vor\ jeder\ Testfall-Methode\ aufgerufen.\n
comment4.params=
comment4.target=void\ tearDown()
comment4.text=\n\ Gibt\ das\ Testger\u00FCst\ wieder\ frei.\n\n\ Wird\ nach\ jeder\ Testfall-Methode\ aufgerufen.\n
comment5.params=testreihe
comment5.target=double\ gibSummeZurueck(double[])
comment5.text=\n\ \ Unsch\u00F6ne\ Implementierung\ zur\ Berechnung\ der\ Summe,\ um\ die\ sch\u00F6ne\ L\u00F6sung\ zu\ testen\ ohne\ sie\ zu\ verraten,\n\ \ aber\ andererseits\ einen\ Tipp\ zu\ richtigen\ (iterativen)\ L\u00F6sung\ zu\ geben.\n
comment6.params=testreihe
comment6.target=double\ gibDurchschnittZurueck(double[])
comment6.text=\n\ \ Unsch\u00F6ne\ Implementierung\ zur\ Berechnung\ des\ Durchschnitts,\ um\ die\ sch\u00F6ne\ L\u00F6sung\ zu\ testen\ ohne\ sie\ zu\ verraten,\n\ \ aber\ andererseits\ einen\ Tipp\ zu\ richtigen\ (iterativen)\ L\u00F6sung\ zu\ geben.\n
comment7.params=testreihe\ wert
comment7.target=double\ gibIndexZurueck(double[],\ double)
comment7.text=\n\ \ Unsch\u00F6ne\ Implementierung\ zur\ Berechnung\ des\ Index,\ um\ die\ sch\u00F6ne\ L\u00F6sung\ zu\ testen\ ohne\ sie\ zu\ verraten,\n\ \ aber\ andererseits\ einen\ Tipp\ zu\ richtigen\ (iterativen)\ L\u00F6sung\ zu\ geben.\n
comment8.params=testreihe
comment8.target=double\ gibMaximumZurueck(double[])
comment8.text=\n\ \ Unsch\u00F6ne\ Implementierung\ zur\ Berechnung\ des\ Maximums,\ um\ die\ sch\u00F6ne\ L\u00F6sung\ zu\ testen\ ohne\ sie\ zu\ verraten,\n\ \ aber\ andererseits\ einen\ Tipp\ zu\ richtigen\ (iterativen)\ L\u00F6sung\ zu\ geben.\n
comment9.params=testreihe
comment9.target=double\ gibMinimumZurueck(double[])
comment9.text=\n\ \ Unsch\u00F6ne\ Implementierung\ zur\ Berechnung\ des\ Minimums,\ um\ die\ sch\u00F6ne\ L\u00F6sung\ zu\ testen\ ohne\ sie\ zu\ verraten,\n\ \ aber\ andererseits\ einen\ Tipp\ zu\ richtigen\ (iterativen)\ L\u00F6sung\ zu\ geben.\n
numComments=16
